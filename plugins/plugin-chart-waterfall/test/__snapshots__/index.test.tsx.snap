// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plugin-chart-waterfall Chart with legend top 1`] = `
Object {
  "BarChartProps": Array [
    Object {
      "barCategoryGap": 0,
      "children": Array [
        <mockConstructor
          iconSize={10}
          iconType="square"
          payload={
            Array [
              Object {
                "color": "#5AC189",
                "id": "increase",
                "type": "square",
                "value": "Increase",
              },
              Object {
                "color": "#E04355",
                "id": "decrease",
                "type": "square",
                "value": "Decrease",
              },
              Object {
                "color": "#66BCFE",
                "id": "total",
                "type": "square",
                "value": "Total",
              },
            ]
          }
          verticalAlign="top"
          wrapperStyle={
            Object {
              "paddingBottom": 20,
            }
          }
        />,
        <mockConstructor
          horizontal={true}
          vertical={false}
        />,
        <mockConstructor
          angle={-45}
          dataKey="period_type"
          dy={10}
          height={6}
          interval={0}
          tick={[Function]}
        />,
        <mockConstructor
          domain={
            Array [
              29,
              134,
            ]
          }
          tickFormatter={[Function]}
          type="number"
        />,
        <mockConstructor
          content={
            <WaterfallTooltip
              formatter={[Function]}
            />
          }
        />,
        <mockConstructor
          dataKey="COUNT(volume_for_roi)"
          onClick={[Function]}
          shape={[Function]}
        >
          <LabelList
            content={[Function]}
            dataKey="COUNT(volume_for_roi)"
            position="top"
            valueAccessor={[MockFunction]}
          />
        </mockConstructor>,
      ],
      "data": Array [
        Object {
          "COUNT(volume_for_roi)": Array [
            29,
            122,
          ],
          "__TOTAL__": true,
          "change": 0,
          "period": "__TOTAL__",
          "period_type": "Total Period",
          "thisPeriod": 122,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            122,
            105,
          ],
          "change": -17,
          "changePercentage": -13.934426229508196,
          "lastPeriod": 122,
          "lastPeriodValue": 61,
          "period": "2018",
          "period_type": "Custom",
          "thisPeriod": 105,
          "thisPeriodValue": 44,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            105,
            86,
          ],
          "change": -19,
          "changePercentage": -18.095238095238095,
          "lastPeriod": 105,
          "lastPeriodValue": 61,
          "period": "2018",
          "period_type": "Standard",
          "thisPeriod": 86,
          "thisPeriodValue": 42,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            29,
            86,
          ],
          "__TOTAL__": true,
          "change": -36,
          "period": "__TOTAL__",
          "period_type": "2018",
          "thisPeriod": 50,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            86,
            86,
          ],
          "change": 0,
          "changePercentage": 0,
          "lastPeriod": 86,
          "lastPeriodValue": 44,
          "period": "2017",
          "period_type": "Custom",
          "thisPeriod": 86,
          "thisPeriodValue": 44,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            86,
            86,
          ],
          "change": 0,
          "changePercentage": 0,
          "lastPeriod": 86,
          "lastPeriodValue": 42,
          "period": "2017",
          "period_type": "Standard",
          "thisPeriod": 86,
          "thisPeriodValue": 42,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            29,
            86,
          ],
          "__TOTAL__": true,
          "change": 0,
          "period": "__TOTAL__",
          "period_type": "2017",
          "thisPeriod": 86,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            86,
            63,
          ],
          "change": -23,
          "changePercentage": -26.744186046511626,
          "lastPeriod": 86,
          "lastPeriodValue": 44,
          "period": "2020",
          "period_type": "Custom",
          "thisPeriod": 63,
          "thisPeriodValue": 21,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            63,
            40,
          ],
          "change": -23,
          "changePercentage": -36.507936507936506,
          "lastPeriod": 63,
          "lastPeriodValue": 42,
          "period": "2020",
          "period_type": "Standard",
          "thisPeriod": 40,
          "thisPeriodValue": 19,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            29,
            40,
          ],
          "__TOTAL__": true,
          "change": -46,
          "period": "__TOTAL__",
          "period_type": "2020",
          "thisPeriod": -6,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            40,
            39,
          ],
          "change": -1,
          "changePercentage": -2.5,
          "lastPeriod": 40,
          "lastPeriodValue": 21,
          "period": "2019",
          "period_type": "Custom",
          "thisPeriod": 39,
          "thisPeriodValue": 20,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            39,
            39,
          ],
          "change": 0,
          "changePercentage": 0,
          "lastPeriod": 39,
          "lastPeriodValue": 19,
          "period": "2019",
          "period_type": "Standard",
          "thisPeriod": 39,
          "thisPeriodValue": 19,
        },
        Object {
          "COUNT(volume_for_roi)": Array [
            29,
            39,
          ],
          "__TOTAL__": true,
          "change": -1,
          "period": "__TOTAL__",
          "period_type": "2019",
          "thisPeriod": 38,
        },
      ],
      "height": 400,
      "margin": Object {
        "bottom": 25,
        "left": 11,
      },
      "width": 800,
    },
    Object {},
  ],
  "BarProps": Array [
    Object {
      "children": <LabelList
        content={[Function]}
        dataKey="COUNT(volume_for_roi)"
        position="top"
        valueAccessor={[MockFunction]}
      />,
      "dataKey": "COUNT(volume_for_roi)",
      "onClick": [Function],
      "shape": [Function],
    },
    Object {},
  ],
  "CartesianGridProps": Array [
    Object {
      "horizontal": true,
      "vertical": false,
    },
    Object {},
  ],
  "LegendProps": Array [
    Object {
      "iconSize": 10,
      "iconType": "square",
      "payload": Array [
        Object {
          "color": "#5AC189",
          "id": "increase",
          "type": "square",
          "value": "Increase",
        },
        Object {
          "color": "#E04355",
          "id": "decrease",
          "type": "square",
          "value": "Decrease",
        },
        Object {
          "color": "#66BCFE",
          "id": "total",
          "type": "square",
          "value": "Total",
        },
      ],
      "verticalAlign": "top",
      "wrapperStyle": Object {
        "paddingBottom": 20,
      },
    },
    Object {},
  ],
  "TooltipProps": Array [
    Object {
      "content": <WaterfallTooltip
        formatter={[Function]}
      />,
    },
    Object {},
  ],
  "XAxisProps": Array [
    Object {
      "angle": -45,
      "dataKey": "period_type",
      "dy": 10,
      "height": 6,
      "interval": 0,
      "tick": [Function],
    },
    Object {},
  ],
  "YAxisProps": Array [
    Object {
      "domain": Array [
        29,
        134,
      ],
      "tickFormatter": [Function],
      "type": "number",
    },
    Object {},
  ],
}
`;

exports[`plugin-chart-waterfall processNumbers adaptive with digits for different numbers 1`] = `
Array [
  Object {
    "metric": Array [
      -0.111,
      0,
    ],
  },
  Object {
    "metric": Array [
      -0.112,
      0,
    ],
  },
  Object {
    "metric": Array [
      -0.112,
      0,
    ],
  },
  Object {
    "metric": Array [
      -0.1,
      0,
    ],
  },
  Object {
    "metric": Array [
      0,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.1,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.111,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.112,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.112,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.123,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.123,
      0,
    ],
  },
  Object {
    "metric": Array [
      123,
      0,
    ],
  },
  Object {
    "metric": Array [
      123456,
      0,
    ],
  },
  Object {
    "metric": Array [
      123456789,
      0,
    ],
  },
  Object {
    "metric": Array [
      1.2345678910111213e+30,
      0,
    ],
  },
]
`;

exports[`plugin-chart-waterfall processNumbers adaptive with digits without precision 1`] = `
Array [
  Object {
    "metric": Array [
      -0.1114,
      0,
    ],
  },
  Object {
    "metric": Array [
      -0.1115,
      0,
    ],
  },
  Object {
    "metric": Array [
      -0.1116,
      0,
    ],
  },
  Object {
    "metric": Array [
      -0.1,
      0,
    ],
  },
  Object {
    "metric": Array [
      0,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.1,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.1114,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.1115,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.1116,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.123,
      0,
    ],
  },
  Object {
    "metric": Array [
      0.123456,
      0,
    ],
  },
  Object {
    "metric": Array [
      123,
      0,
    ],
  },
  Object {
    "metric": Array [
      123456,
      0,
    ],
  },
  Object {
    "metric": Array [
      123456789,
      0,
    ],
  },
  Object {
    "metric": Array [
      1.2345678910111213e+30,
      0,
    ],
  },
]
`;
