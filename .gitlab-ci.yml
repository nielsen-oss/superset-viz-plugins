include:
  - project: 'nielsen-media/identity/cloudops/continuous-integration'
    ref: master
    file: '/Jobs/maf/initPipeline.yml'    
image: node:12.16.2
cache:
  paths:
    - node_modules/

stages:
  - mafInit
  - install
  # - test
  - deployPlugins
  - prepareBuild
  - buildFork

install:
  extends: .base
  stage: install
  tags:
    - cicd-runner-maf
  script:
    - yarn --frozen-lockfile
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# lint:
#   stage: test
#   tags:
#     - cicd-runner-maf
#   script:
#     - git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
#     - yarn lint
#   only:
#     - master
#     - merge_requests

# test:
#   stage: test
#   tags:
#     - cicd-runner-maf
#   script:
#     - git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
#     - yarn test
#   rules:
#     - if: $CI_MERGE_REQUEST_IID

deployPlugins:
  stage: deployPlugins
  extends: .base
  tags:
    - cicd-runner-maf
  script:
    - npm install -g lerna
    - git remote set-url origin "git@gitlab.com:$CI_PROJECT_PATH.git"
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config --global user.name "MAF CI"
    - git config --global user.email "nmcci@nielsen.com"
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
    - echo git checkout -B “$CI_COMMIT_REF_NAME” “$CI_COMMIT_SHA”
    - git fetch
    - yarn prerelease
    - lerna publish --registry https://nexus.exelator.net/repository/npm-internal/ --yes 
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

prepareSupersetBuild:
  stage: prepareBuild
  extends: .base
  tags:
    - cicd-runner-maf
  script:
    - yarn
    # Clone the repos
    - git clone -b chores/test-docker-file https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/nielsen-media/maf/superset/superset-fork.git
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/nielsen-media/maf/superset/superset-maf-extensions.git
    # Add dependencies from superset-maf-ui to supserset-frontend and generate the preset
    - cp .npmrc ./superset-fork/superset-frontend/.npmrc
    - cp .npmrc ./superset-maf-extensions/.npmrc
    - cd superset-fork/superset-frontend
    - ls -la
    - node ../../scripts/addDependencies.js
    - node ../../scripts/generateMafPreset.js
    - mv ./MafPreset.ts ./src/visualizations/presets/MafPreset.js
    - cp ../../templates/setupPluginsExtra.js ./src/setup/setupPluginsExtra.js
    - npm install
  artifacts:
    paths:
      - ./superset-fork
      - ./superset-maf-extensions
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $DEPLOY_NEW_FORK == "true"

buildDocker:
  stage: buildFork
  extends: .base
  image:
    name: docker:19.03
  services:
    - name: docker:19.03-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  tags:
    - cicd-runner-maf
  script:
    - ls -la
    - cp .npmrc ./superset-fork/superset-frontend/.npmrc
    - cp .npmrc ./superset-fork/.npmrc
    - cd superset-fork/superset-frontend/
    - ls -la
    - cd ../../
    # Get current version and fork branch name
    - cd superset-maf-extensions
    - VERSION=$(sed '1!d' setup.py | cut -d '=' -f 2  | tr -d '""')
    - echo $VERSION
    - FORK_BRANCH_NAME=${NEW_FORK_VERSION:=$(sed '2!d' setup.py | cut -d '=' -f 2  | tr -d '""')}
    - echo $FORK_BRANCH_NAME
    # Build docker and push it
    - cd ../superset-fork
    - ls -la
    - cd superset-frontend
    - ls -la
    - cd ../
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS} docker.io
    - docker build -t exelate/superset-fork:latest -t exelate/superset-fork:${FORK_BRANCH_NAME}-latest -t exelate/superset-fork:${FORK_BRANCH_NAME}-${CI_PIPELINE_IID}-gitlab-test .
    - docker push exelate/superset-fork:${FORK_BRANCH_NAME}-latest 
    - docker push exelate/superset-fork:latest
    - docker push exelate/superset-fork:${FORK_BRANCH_NAME}-${CI_PIPELINE_IID}-gitlab-test
  dependencies:
    - initMasterPipeline
    - initMergeRequestPipeline
    - prepareSupersetBuild
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $DEPLOY_NEW_FORK == "true"
