image: node:12.16.2
cache:
  paths:
    - node_modules/
    - .yarn

variables:
  KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: ci-pipeline-maf

before_script:
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval `ssh-agent -s`
  - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null # add ssh ke
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_rsa.pub
  - apt-get update -qq && apt-get install
  - apt-get install git
  - npm install -g npm-cli-login
  - npm-cli-login -u $CI_CLI_USER -p $CI_CLI_PASSWORD -e $CI_CLI_EMAIL -r https://nexus.exelator.net/repository/npm-all
  - npm-cli-login -u $CI_CLI_USER -p $CI_CLI_PASSWORD -e $CI_CLI_EMAIL -r https://nexus.exelator.net/repository/npm-internal
  - npm set registry https://nexus.exelator.net/repository/npm-all/
  - npm config set always-auth=true
  - cp ~/.npmrc .

stages:
  - install
  # - test
  - deploy
  - buildFork

install:
  stage: install
  tags:
    - cicd-runner-maf
  script:
    - yarn --frozen-lockfile
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# lint:
#   stage: test
#   tags:
#     - cicd-runner-maf
#   script:
#     - git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
#     - yarn lint
#   only:
#     - master
#     - merge_requests

# test:
#   stage: test
#   tags:
#     - cicd-runner-maf
#   script:
#     - git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
#     - yarn test
#   rules:
#     - if: $CI_MERGE_REQUEST_IID

deploy_prod:
  stage: deploy
  tags:
    - cicd-runner-maf
  script:
    - npm install -g lerna
    - git remote set-url origin "git@gitlab.com:$CI_PROJECT_PATH.git"
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git config --global user.name "MAF CI"
    - git config --global user.email "nmcci@nielsen.com"
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
    - echo git checkout -B “$CI_COMMIT_REF_NAME” “$CI_COMMIT_SHA”
    - git fetch
    - yarn prerelease
    - lerna publish --registry https://nexus.exelator.net/repository/npm-internal/ --yes 
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

buildSuperSetFork:
  stage: buildFork
  tags:
    - cicd-runner-maf
  script:
    # Clone the repos
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/nielsen-media/maf/superset/superset-fork.git
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/nielsen-media/maf/superset/superset-maf-extensions.git
    # Add dependencies from superset-maf-ui to supserset-frontend and generate the preset
    - cd superset-fork/superset-frontend
    - node ../../scripts/addDependencies.js
    - node ../../scripts/generateMafPreset.js
    - mv ./MafPreset.ts ./src/visualizations/presets/MafPreset.js
    - cp ../../templates/setupPluginsExtra.js ./src/setup/setupPluginsExtra.js
    # Get current version and fork branch name
    - cd ../../superset-maf-extensions
    - VERSION=$(sed '1!d' setup.py | cut -d '=' -f 2  | tr -d '""')
    - echo $NEW_FORK_VERSION
    - FORK_BRANCH_NAME=${NEW_FORK_VERSION:=$(sed '2!d' setup.py | cut -d '=' -f 2  | tr -d '""')}
    # Build docker and push it
    - cd ../superset-fork
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS} docker.io
    - docker build -t exelate/superset-fork:latest -t exelate/superset-fork:${FORK_BRANCH_NAME}-latest -t exelate/superset-fork:${FORK_BRANCH_NAME}.${CI_PIPELINE_IID} .
    - docker push exelate/superset-fork:${FORK_BRANCH_NAME}-latest 
    - docker push exelate/superset-fork:latest
    - docker push exelate/superset-fork:${FORK_BRANCH_NAME}-${CI_PIPELINE_IID}
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $DEPLOY_NEW_FORK == "true"